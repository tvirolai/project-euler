/*
 * Project Euler (http://projecteuler.net) problem 25: Distinct powers
 * number
 * 
 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * 2^2=4, 2^3=8, 2^4=16, 25=32
 * 3^2=9, 3^3=27, 3^4=81, 3^5=243
 * 4^2=16, 4^3=64, 4^4=256, 4^5=1024
 * 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 * If they are then placed in numerical order, with any repeats removed, we get
 * the following sequence of 15 distinct terms:
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100
 * and 2 ≤ b ≤ 100?
 */

package problems001_049;

import java.math.BigInteger;
import java.util.HashSet;
import java.util.Set;


public class Problem029 {
    
    private final Set<BigInteger> terms;
    
    public Problem029() {
        this.terms = new HashSet<>();
    }
    
    public void solve() {
        System.out.println("Problem 29: " + calculate(2, 100));
    }
    
    public int calculate(int lower, int upper) {
        for (int a = lower; a <= upper; a++) {
            for (int b = lower; b <= upper; b++) {
                BigInteger BigA = new BigInteger("" + a);
                BigInteger term = BigA.pow(b);
                this.terms.add(term);
            }
        }
        return terms.size();
    }

}
